Cat : Set
  := (Ob : Set)
   * (Hom : Ob -> Ob -> Set)
   * (id : {x : Ob} -> Hom x x)
   * (comp : {x y z : Ob} -> Hom y z -> Hom x y -> Hom x z)
   * (idl : El ({x y : Ob} (f : Hom x y) -> comp id f = f))
   * (idr : El ({x y : Ob} (f : Hom x y) -> comp f id = f))
   * (assoc : El ({x y z w : Ob} (f : Hom z w) (g : Hom y z) (h : Hom x y) -> comp f (comp g h) = comp (comp f g) h))
   * Top

op : Cat -> Cat
  := \C. ( C.Ob
         , \x y. C.Hom y x
         , C.id
         , \f g. C.comp g f
         , C.idr
         , C.idl
         , \f g h. sym (C.assoc h g f)
         , tt )

opop : (C : Cat) -> op (op C) = C
  := \_. refl

Psh : Cat -> Set
  := \C. (ob : C.Ob -> Set)
       * (subst : {x y} -> ob y -> C.Hom x y -> ob x)
       * (id : El ({x} (v : ob x) -> subst v C.id = v))
       * (comp : El ({x y z} {f : C.Hom y z} {g: C.Hom x y} (v : ob z) -> subst v (C.comp f g) = subst (subst v f) g))
       * Top

PshHom : (C : Cat) -> Psh C -> Psh C -> Set
  := \C F G. (map : {x} -> F.ob x -> G.ob x)
           * (natural : El ({x y} {f : C.Hom x y} {v : F.ob y} -> map (F.subst v f) = G.subst (map v) f))
           * Top

PshId : (C : Cat) (F : Psh C) -> PshHom C F F
  := \C F. ( \v. v
           , refl
           , tt)

PshComp : (C : Cat) (F G H : Psh C) (A : PshHom C G H) (B : PshHom C F G) -> PshHom C F H
  := \C F G H A B.
     ( \v. A.map (B.map v)
     , \{x} {y} {f} {v}. trans (ap A.map (B.natural{_}{_}{f}{v})) A.natural
     , tt)

PshCat : Cat -> Cat
  := \C. ( Psh C
         , PshHom C
         , \{F}. PshId C F
         , \{F} {G} {H} A B. PshComp C F G H A B
         , \A. refl
         , \A. refl
         , \_ _ _. refl
         , tt)
