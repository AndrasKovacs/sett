Cat : Set
  := (Ob    : Set)
   × (Hom   : Ob → Ob → Set)
   × (id    : {x} → Hom x x)
   × (comp  : {x y z} → Hom y z → Hom x y → Hom x z)
   × (idl   : {x y} (f : Hom x y) → comp id f = f)
   × (idr   : {x y} (f : Hom x y) → comp f id = f)
   × (assoc : {x y z w} (f : Hom z w) (g : Hom y z) (h : Hom x y) → comp f (comp g h) = comp (comp f g) h)
   × ⊤

op : Cat → Cat
  := λ C. ( C.Ob
          , λ x y. C.Hom y x
          , C.id
          , λ f g. C.comp g f
          , C.idr
          , C.idl
          , λ f g h. sym (C.assoc h g f)
          , tt )

opop : (C : Cat) → op (op C) = C
  := λ _. refl

Psh : Cat → Set
  := λ C. (ob    : C.Ob → Set)
        × (subst : {x y} → ob y → C.Hom x y → ob x)
        × (id    : {x} (v : ob x) → subst v C.id = v)
        × (comp  : {x y z} {f : C.Hom y z} {g: C.Hom x y} (v : ob z)
                   → subst v (C.comp f g) = subst (subst v f) g)
        × ⊤

PshHom : (C : Cat) → Psh C → Psh C → Set
  := λ C F G. (map : {x} → F.ob x → G.ob x)
            × (natural : {x y} {f : C.Hom x y} {v : F.ob y} → map (F.subst v f) = G.subst (map v) f)
            × ⊤

PshId : (C : Cat) (F : Psh C) → PshHom C F F
  := λ C F. ( λ v. v
            , refl
            , tt)

PshComp : (C : Cat) (F G H : Psh C) (A : PshHom C G H) (B : PshHom C F G) → PshHom C F H
  := λ C F G H A B.
     ( λ v. A.map (B.map v)
     , λ {f:=f} {v}. trans (ap A.map (B.natural{_}{_}{f}{v})) A.natural
     , tt)

PshCat : Cat → Cat
  := λ C.( Psh C
         , PshHom C
         , λ {F}. PshId C F
         , λ {F} {G} {H} A B. PshComp C F G H A B
         , λ _. refl
         , λ _. refl
         , λ _ _ _. refl
         , tt)
