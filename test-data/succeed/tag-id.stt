

Id : {A : Set} -> A -> A -> Set
  := \{A} x y. Tagged ((A : Set) * A * A) (A,x,y) (x = y)

projId : {A : Set} {x y} -> Id {A} x y -> x = y
  := \p. p .untag

irefl : {A : Set} {x : A} -> Id x x
  := \{A} {x}. refl .tag

idtrans : {A : Set} {x y z : A} -> Id x y -> Id y z -> Id x z
  := \p q. (trans p.untag q.untag).tag

Pointed : Set := (A : Set) * A

reflPointed : (P : Pointed) -> Id P P
  := \_. irefl
